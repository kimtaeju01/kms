/// <reference types="node" />
import { AlgorithmSuiteIdentifier, KeyringNode, NodeEncryptionMaterial, EncryptionContext, NodeMaterialsManager } from '@aws-crypto/material-management-node';
import { MessageHeader } from '@aws-crypto/serialize';
import { Duplex } from 'stream';
export interface EncryptStreamInput {
    suiteId?: AlgorithmSuiteIdentifier;
    encryptionContext?: EncryptionContext;
    frameLength?: number;
    plaintextLength?: number;
}
/**
 * Takes a NodeDefaultCryptographicMaterialsManager or a KeyringNode that will
 * be wrapped in a NodeDefaultCryptographicMaterialsManager and returns a stream.
 *
 * @param cmm NodeMaterialsManager|KeyringNode
 * @param op EncryptStreamInput
 */
export declare function encryptStream(cmm: KeyringNode | NodeMaterialsManager, op?: EncryptStreamInput): Duplex;
export declare function getEncryptionInfo(material: NodeEncryptionMaterial, frameLength: number): {
    getCipher: import("@aws-crypto/material-management-node").GetCipher;
    messageHeader: MessageHeader;
    rawHeader: (Uint8Array | Buffer)[];
};
//# sourceMappingURL=encrypt_stream.d.ts.map