import { KmsClientSupplier } from './kms_client_supplier';
import { AwsEsdkKMSInterface } from './kms_types';
import { Keyring, EncryptionMaterial, DecryptionMaterial, SupportedAlgorithmSuites, EncryptedDataKey } from '@aws-crypto/material-management';
export interface KmsKeyringInput<Client extends AwsEsdkKMSInterface> {
    clientProvider: KmsClientSupplier<Client>;
    keyIds?: string[];
    generatorKeyId?: string;
    grantTokens?: string[];
    discovery?: boolean;
}
export interface KeyRing<S extends SupportedAlgorithmSuites, Client extends AwsEsdkKMSInterface> extends Keyring<S> {
    keyIds: ReadonlyArray<string>;
    generatorKeyId?: string;
    clientProvider: KmsClientSupplier<Client>;
    grantTokens?: string[];
    isDiscovery: boolean;
    _onEncrypt(material: EncryptionMaterial<S>): Promise<EncryptionMaterial<S>>;
    _onDecrypt(material: DecryptionMaterial<S>, encryptedDataKeys: EncryptedDataKey[]): Promise<DecryptionMaterial<S>>;
}
export interface KmsKeyRingConstructible<S extends SupportedAlgorithmSuites, Client extends AwsEsdkKMSInterface> {
    new (input: KmsKeyringInput<Client>): KeyRing<S, Client>;
}
export interface KeyRingConstructible<S extends SupportedAlgorithmSuites> {
    new (): Keyring<S>;
}
export declare function KmsKeyringClass<S extends SupportedAlgorithmSuites, Client extends AwsEsdkKMSInterface>(BaseKeyring: KeyRingConstructible<S>): KmsKeyRingConstructible<S, Client>;
//# sourceMappingURL=kms_keyring.d.ts.map