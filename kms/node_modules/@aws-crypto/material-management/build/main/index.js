"use strict";
// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
var algorithm_suites_1 = require("./algorithm_suites");
exports.AlgorithmSuiteIdentifier = algorithm_suites_1.AlgorithmSuiteIdentifier;
exports.AlgorithmSuite = algorithm_suites_1.AlgorithmSuite;
var web_crypto_algorithms_1 = require("./web_crypto_algorithms");
exports.WebCryptoAlgorithmSuite = web_crypto_algorithms_1.WebCryptoAlgorithmSuite;
var node_algorithms_1 = require("./node_algorithms");
exports.NodeAlgorithmSuite = node_algorithms_1.NodeAlgorithmSuite;
var keyring_1 = require("./keyring");
exports.Keyring = keyring_1.Keyring;
exports.KeyringNode = keyring_1.KeyringNode;
exports.KeyringWebCrypto = keyring_1.KeyringWebCrypto;
var keyring_trace_1 = require("./keyring_trace");
exports.KeyringTraceFlag = keyring_trace_1.KeyringTraceFlag;
var multi_keyring_1 = require("./multi_keyring");
exports.MultiKeyringNode = multi_keyring_1.MultiKeyringNode;
exports.MultiKeyringWebCrypto = multi_keyring_1.MultiKeyringWebCrypto;
var cryptographic_material_1 = require("./cryptographic_material");
exports.NodeEncryptionMaterial = cryptographic_material_1.NodeEncryptionMaterial;
exports.NodeDecryptionMaterial = cryptographic_material_1.NodeDecryptionMaterial;
var cryptographic_material_2 = require("./cryptographic_material");
exports.isValidCryptoKey = cryptographic_material_2.isValidCryptoKey;
exports.isCryptoKey = cryptographic_material_2.isCryptoKey;
exports.keyUsageForMaterial = cryptographic_material_2.keyUsageForMaterial;
exports.subtleFunctionForMaterial = cryptographic_material_2.subtleFunctionForMaterial;
var cryptographic_material_3 = require("./cryptographic_material");
exports.WebCryptoEncryptionMaterial = cryptographic_material_3.WebCryptoEncryptionMaterial;
exports.WebCryptoDecryptionMaterial = cryptographic_material_3.WebCryptoDecryptionMaterial;
var cryptographic_material_4 = require("./cryptographic_material");
exports.isEncryptionMaterial = cryptographic_material_4.isEncryptionMaterial;
exports.isDecryptionMaterial = cryptographic_material_4.isDecryptionMaterial;
var cryptographic_material_5 = require("./cryptographic_material");
exports.unwrapDataKey = cryptographic_material_5.unwrapDataKey;
exports.wrapWithKeyObjectIfSupported = cryptographic_material_5.wrapWithKeyObjectIfSupported;
var cryptographic_material_6 = require("./cryptographic_material");
exports.decorateCryptographicMaterial = cryptographic_material_6.decorateCryptographicMaterial;
exports.decorateWebCryptoMaterial = cryptographic_material_6.decorateWebCryptoMaterial;
var signature_key_1 = require("./signature_key");
exports.SignatureKey = signature_key_1.SignatureKey;
exports.VerificationKey = signature_key_1.VerificationKey;
var encrypted_data_key_1 = require("./encrypted_data_key");
exports.EncryptedDataKey = encrypted_data_key_1.EncryptedDataKey;
var immutable_class_1 = require("./immutable_class");
exports.immutableBaseClass = immutable_class_1.immutableBaseClass;
exports.immutableClass = immutable_class_1.immutableClass;
exports.frozenClass = immutable_class_1.frozenClass;
exports.readOnlyProperty = immutable_class_1.readOnlyProperty;
var needs_1 = require("./needs");
exports.needs = needs_1.needs;
var clone_cryptographic_material_1 = require("./clone_cryptographic_material");
exports.cloneMaterial = clone_cryptographic_material_1.cloneMaterial;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLG9FQUFvRTtBQUNwRSxzQ0FBc0M7O0FBRXRDLHVEQUkyQjtBQUh6QixzREFBQSx3QkFBd0IsQ0FBQTtBQUV4Qiw0Q0FBQSxjQUFjLENBQUE7QUFlaEIsaUVBQWlFO0FBQXhELDBEQUFBLHVCQUF1QixDQUFBO0FBQ2hDLHFEQUFzRDtBQUE3QywrQ0FBQSxrQkFBa0IsQ0FBQTtBQUUzQixxQ0FBa0U7QUFBekQsNEJBQUEsT0FBTyxDQUFBO0FBQUUsZ0NBQUEsV0FBVyxDQUFBO0FBQUUscUNBQUEsZ0JBQWdCLENBQUE7QUFDL0MsaURBQWdFO0FBQXpDLDJDQUFBLGdCQUFnQixDQUFBO0FBQ3ZDLGlEQUF5RTtBQUFoRSwyQ0FBQSxnQkFBZ0IsQ0FBQTtBQUFFLGdEQUFBLHFCQUFxQixDQUFBO0FBR2hELG1FQUdpQztBQUYvQiwwREFBQSxzQkFBc0IsQ0FBQTtBQUN0QiwwREFBQSxzQkFBc0IsQ0FBQTtBQUV4QixtRUFLaUM7QUFKL0Isb0RBQUEsZ0JBQWdCLENBQUE7QUFDaEIsK0NBQUEsV0FBVyxDQUFBO0FBQ1gsdURBQUEsbUJBQW1CLENBQUE7QUFDbkIsNkRBQUEseUJBQXlCLENBQUE7QUFFM0IsbUVBR2lDO0FBRi9CLCtEQUFBLDJCQUEyQixDQUFBO0FBQzNCLCtEQUFBLDJCQUEyQixDQUFBO0FBRTdCLG1FQUdpQztBQUYvQix3REFBQSxvQkFBb0IsQ0FBQTtBQUNwQix3REFBQSxvQkFBb0IsQ0FBQTtBQUV0QixtRUFHaUM7QUFGL0IsaURBQUEsYUFBYSxDQUFBO0FBQ2IsZ0VBQUEsNEJBQTRCLENBQUE7QUFFOUIsbUVBS2lDO0FBSC9CLGlFQUFBLDZCQUE2QixDQUFBO0FBQzdCLDZEQUFBLHlCQUF5QixDQUFBO0FBRzNCLGlEQUErRDtBQUF0RCx1Q0FBQSxZQUFZLENBQUE7QUFBRSwwQ0FBQSxlQUFlLENBQUE7QUFDdEMsMkRBQTBFO0FBQWpFLGdEQUFBLGdCQUFnQixDQUFBO0FBRXpCLHFEQUswQjtBQUp4QiwrQ0FBQSxrQkFBa0IsQ0FBQTtBQUNsQiwyQ0FBQSxjQUFjLENBQUE7QUFDZCx3Q0FBQSxXQUFXLENBQUE7QUFDWCw2Q0FBQSxnQkFBZ0IsQ0FBQTtBQUdsQixpQ0FBK0I7QUFBdEIsd0JBQUEsS0FBSyxDQUFBO0FBQ2QsK0VBQThEO0FBQXJELHVEQUFBLGFBQWEsQ0FBQSJ9