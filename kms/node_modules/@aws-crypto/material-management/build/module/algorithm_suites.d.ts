export declare enum AlgorithmSuiteIdentifier {
    'ALG_AES128_GCM_IV12_TAG16' = 20,
    'ALG_AES192_GCM_IV12_TAG16' = 70,
    'ALG_AES256_GCM_IV12_TAG16' = 120,
    'ALG_AES128_GCM_IV12_TAG16_HKDF_SHA256' = 276,
    'ALG_AES192_GCM_IV12_TAG16_HKDF_SHA256' = 326,
    'ALG_AES256_GCM_IV12_TAG16_HKDF_SHA256' = 376,
    'ALG_AES128_GCM_IV12_TAG16_HKDF_SHA256_ECDSA_P256' = 532,
    'ALG_AES192_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384' = 838,
    'ALG_AES256_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384' = 888
}
export declare type AlgorithmSuiteName = keyof typeof AlgorithmSuiteIdentifier;
export declare type AlgorithmSuiteTypeNode = 'node';
export declare type AlgorithmSuiteTypeWebCrypto = 'webCrypto';
export declare type NodeEncryption = 'aes-128-gcm' | 'aes-192-gcm' | 'aes-256-gcm';
export declare type WebCryptoEncryption = 'AES-GCM';
export declare type KDF = 'HKDF';
export declare type NodeHash = 'sha256' | 'sha384';
export declare type WebCryptoHash = 'SHA-256' | 'SHA-384';
export declare type NodeECDHCurve = 'prime256v1' | 'secp384r1';
export declare type WebCryptoECDHCurve = 'P-256' | 'P-384';
export declare type KeyLength = 128 | 192 | 256;
export declare type IvLength = 12;
export declare type TagLength = 128;
export interface IAlgorithmSuite extends Readonly<{
    id: AlgorithmSuiteIdentifier;
    encryption: NodeEncryption | WebCryptoEncryption;
    keyLength: KeyLength;
    ivLength: IvLength;
    tagLength: TagLength;
    cacheSafe: boolean;
    kdf?: KDF;
    kdfHash?: NodeHash | WebCryptoHash;
    signatureCurve?: NodeECDHCurve | WebCryptoECDHCurve;
    signatureHash?: NodeHash | WebCryptoHash;
}> {
}
export interface INodeAlgorithmSuite extends IAlgorithmSuite {
    encryption: NodeEncryption;
    kdfHash?: NodeHash;
    signatureCurve?: NodeECDHCurve;
    signatureHash?: NodeHash;
}
export interface IWebCryptoAlgorithmSuite extends IAlgorithmSuite {
    encryption: WebCryptoEncryption;
    kdfHash?: WebCryptoHash;
    signatureCurve?: WebCryptoECDHCurve;
    signatureHash?: WebCryptoHash;
}
export declare abstract class AlgorithmSuite implements IAlgorithmSuite {
    id: AlgorithmSuiteIdentifier;
    name: AlgorithmSuiteName;
    encryption: NodeEncryption | WebCryptoEncryption;
    keyLength: KeyLength;
    keyLengthBytes: number;
    ivLength: IvLength;
    tagLength: TagLength;
    cacheSafe: boolean;
    kdf?: KDF;
    kdfHash?: NodeHash | WebCryptoHash;
    signatureCurve?: NodeECDHCurve | WebCryptoECDHCurve;
    signatureHash?: NodeHash | WebCryptoHash;
    type: AlgorithmSuiteTypeNode | AlgorithmSuiteTypeWebCrypto;
    constructor(suite: INodeAlgorithmSuite | IWebCryptoAlgorithmSuite);
}
//# sourceMappingURL=algorithm_suites.d.ts.map