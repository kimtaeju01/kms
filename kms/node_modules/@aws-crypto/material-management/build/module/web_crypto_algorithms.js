// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
/*
 * This file contains information about particular algorithm suites used
 * within the encryption SDK.  In most cases, end-users don't need to
 * manipulate this structure, but it can occasionally be needed for more
 * advanced use cases, such as writing keyrings.
 *
 * These are the WebCrypto specific values the AWS Encryption SDK for JavaScript
 * Algorithm Suites.
 */
import { AlgorithmSuite, AlgorithmSuiteIdentifier, } from './algorithm_suites';
import { needs } from './needs';
/* References to https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/algorithms-reference.html
 * These are the composed parameters for each algorithm suite specification for
 * for the WebCrypto environment.
 */
const webCryptoAlgAes128GcmIv12Tag16 = {
    id: AlgorithmSuiteIdentifier.ALG_AES128_GCM_IV12_TAG16,
    encryption: 'AES-GCM',
    keyLength: 128,
    ivLength: 12,
    tagLength: 128,
    cacheSafe: false,
};
/* Web browsers do not support 192 bit key lengths at this time. */
const webCryptoAlgAes192GcmIv12Tag16 = {
    id: AlgorithmSuiteIdentifier.ALG_AES192_GCM_IV12_TAG16,
    encryption: 'AES-GCM',
    keyLength: 192,
    ivLength: 12,
    tagLength: 128,
    cacheSafe: false,
};
const webCryptoAlgAes256GcmIv12Tag16 = {
    id: AlgorithmSuiteIdentifier.ALG_AES256_GCM_IV12_TAG16,
    encryption: 'AES-GCM',
    keyLength: 256,
    ivLength: 12,
    tagLength: 128,
    cacheSafe: false,
};
const webCryptoAlgAes128GcmIv12Tag16HkdfSha256 = {
    id: AlgorithmSuiteIdentifier.ALG_AES128_GCM_IV12_TAG16_HKDF_SHA256,
    encryption: 'AES-GCM',
    keyLength: 128,
    ivLength: 12,
    tagLength: 128,
    kdf: 'HKDF',
    kdfHash: 'SHA-256',
    cacheSafe: true,
};
/* Web browsers do not support 192 bit key lengths at this time. */
const webCryptoAlgAes192GcmIv12Tag16HkdfSha256 = {
    id: AlgorithmSuiteIdentifier.ALG_AES192_GCM_IV12_TAG16_HKDF_SHA256,
    encryption: 'AES-GCM',
    keyLength: 192,
    ivLength: 12,
    tagLength: 128,
    kdf: 'HKDF',
    kdfHash: 'SHA-256',
    cacheSafe: true,
};
const webCryptoAlgAes256GcmIv12Tag16HkdfSha256 = {
    id: AlgorithmSuiteIdentifier.ALG_AES256_GCM_IV12_TAG16_HKDF_SHA256,
    encryption: 'AES-GCM',
    keyLength: 256,
    ivLength: 12,
    tagLength: 128,
    kdf: 'HKDF',
    kdfHash: 'SHA-256',
    cacheSafe: true,
};
const webCryptoAlgAes128GcmIv12Tag16HkdfSha256EcdsaP256 = {
    id: AlgorithmSuiteIdentifier.ALG_AES128_GCM_IV12_TAG16_HKDF_SHA256_ECDSA_P256,
    encryption: 'AES-GCM',
    keyLength: 128,
    ivLength: 12,
    tagLength: 128,
    kdf: 'HKDF',
    kdfHash: 'SHA-256',
    cacheSafe: true,
    signatureCurve: 'P-256',
    signatureHash: 'SHA-256',
};
/* Web browsers do not support 192 bit key lengths at this time. */
const webCryptoAlgAes192GcmIv12Tag16HkdfSha384EcdsaP384 = {
    id: AlgorithmSuiteIdentifier.ALG_AES192_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384,
    encryption: 'AES-GCM',
    keyLength: 192,
    ivLength: 12,
    tagLength: 128,
    kdf: 'HKDF',
    kdfHash: 'SHA-384',
    cacheSafe: true,
    signatureCurve: 'P-384',
    signatureHash: 'SHA-384',
};
const webCryptoAlgAes256GcmIv12Tag16HkdfSha384EcdsaP384 = {
    id: AlgorithmSuiteIdentifier.ALG_AES256_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384,
    encryption: 'AES-GCM',
    keyLength: 256,
    ivLength: 12,
    tagLength: 128,
    kdf: 'HKDF',
    kdfHash: 'SHA-384',
    cacheSafe: true,
    signatureCurve: 'P-384',
    signatureHash: 'SHA-384',
};
const webCryptoAlgorithms = Object.freeze({
    [AlgorithmSuiteIdentifier.ALG_AES128_GCM_IV12_TAG16]: Object.freeze(webCryptoAlgAes128GcmIv12Tag16),
    [AlgorithmSuiteIdentifier.ALG_AES192_GCM_IV12_TAG16]: Object.freeze(webCryptoAlgAes192GcmIv12Tag16),
    [AlgorithmSuiteIdentifier.ALG_AES256_GCM_IV12_TAG16]: Object.freeze(webCryptoAlgAes256GcmIv12Tag16),
    [AlgorithmSuiteIdentifier.ALG_AES128_GCM_IV12_TAG16_HKDF_SHA256]: Object.freeze(webCryptoAlgAes128GcmIv12Tag16HkdfSha256),
    [AlgorithmSuiteIdentifier.ALG_AES192_GCM_IV12_TAG16_HKDF_SHA256]: Object.freeze(webCryptoAlgAes192GcmIv12Tag16HkdfSha256),
    [AlgorithmSuiteIdentifier.ALG_AES256_GCM_IV12_TAG16_HKDF_SHA256]: Object.freeze(webCryptoAlgAes256GcmIv12Tag16HkdfSha256),
    [AlgorithmSuiteIdentifier.ALG_AES128_GCM_IV12_TAG16_HKDF_SHA256_ECDSA_P256]: Object.freeze(webCryptoAlgAes128GcmIv12Tag16HkdfSha256EcdsaP256),
    [AlgorithmSuiteIdentifier.ALG_AES192_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384]: Object.freeze(webCryptoAlgAes192GcmIv12Tag16HkdfSha384EcdsaP384),
    [AlgorithmSuiteIdentifier.ALG_AES256_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384]: Object.freeze(webCryptoAlgAes256GcmIv12Tag16HkdfSha384EcdsaP384),
});
const supportedWebCryptoAlgorithms = Object.freeze({
    [AlgorithmSuiteIdentifier.ALG_AES128_GCM_IV12_TAG16]: Object.freeze(webCryptoAlgAes128GcmIv12Tag16),
    // [AlgorithmSuiteIdentifier.ALG_AES192_GCM_IV12_TAG16]: Object.freeze(webCryptoAlgAes192GcmIv12Tag16),
    [AlgorithmSuiteIdentifier.ALG_AES256_GCM_IV12_TAG16]: Object.freeze(webCryptoAlgAes256GcmIv12Tag16),
    [AlgorithmSuiteIdentifier.ALG_AES128_GCM_IV12_TAG16_HKDF_SHA256]: Object.freeze(webCryptoAlgAes128GcmIv12Tag16HkdfSha256),
    // [AlgorithmSuiteIdentifier.ALG_AES192_GCM_IV12_TAG16_HKDF_SHA256]: Object.freeze(webCryptoAlgAes192GcmIv12Tag16HkdfSha256),
    [AlgorithmSuiteIdentifier.ALG_AES256_GCM_IV12_TAG16_HKDF_SHA256]: Object.freeze(webCryptoAlgAes256GcmIv12Tag16HkdfSha256),
    [AlgorithmSuiteIdentifier.ALG_AES128_GCM_IV12_TAG16_HKDF_SHA256_ECDSA_P256]: Object.freeze(webCryptoAlgAes128GcmIv12Tag16HkdfSha256EcdsaP256),
    // [AlgorithmSuiteIdentifier.ALG_AES192_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384]: Object.freeze(webCryptoAlgAes192GcmIv12Tag16HkdfSha384EcdsaP384),
    [AlgorithmSuiteIdentifier.ALG_AES256_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384]: Object.freeze(webCryptoAlgAes256GcmIv12Tag16HkdfSha384EcdsaP384),
});
export class WebCryptoAlgorithmSuite extends AlgorithmSuite {
    constructor(id) {
        super(webCryptoAlgorithms[id]);
        this.type = 'webCrypto';
        /* Precondition: Browsers do not support 192 bit keys so the AlgorithmSuiteIdentifier is removed.
         * This is primarily an error in decrypt but this make it clear.
         * The error can manifest deep in the decrypt loop making it hard to debug.
         */
        needs(Object.prototype.hasOwnProperty.call(supportedWebCryptoAlgorithms, id), '192-bit AES keys are not supported');
        Object.setPrototypeOf(this, WebCryptoAlgorithmSuite.prototype);
        Object.freeze(this);
    }
}
Object.freeze(WebCryptoAlgorithmSuite.prototype);
Object.freeze(WebCryptoAlgorithmSuite);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2ViX2NyeXB0b19hbGdvcml0aG1zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3dlYl9jcnlwdG9fYWxnb3JpdGhtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvRUFBb0U7QUFDcEUsc0NBQXNDO0FBRXRDOzs7Ozs7OztHQVFHO0FBRUgsT0FBTyxFQUNMLGNBQWMsRUFDZCx3QkFBd0IsR0FNekIsTUFBTSxvQkFBb0IsQ0FBQTtBQUMzQixPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sU0FBUyxDQUFBO0FBRS9COzs7R0FHRztBQUNILE1BQU0sOEJBQThCLEdBQTZCO0lBQy9ELEVBQUUsRUFBRSx3QkFBd0IsQ0FBQyx5QkFBeUI7SUFDdEQsVUFBVSxFQUFFLFNBQVM7SUFDckIsU0FBUyxFQUFFLEdBQUc7SUFDZCxRQUFRLEVBQUUsRUFBRTtJQUNaLFNBQVMsRUFBRSxHQUFHO0lBQ2QsU0FBUyxFQUFFLEtBQUs7Q0FDakIsQ0FBQTtBQUNELG1FQUFtRTtBQUNuRSxNQUFNLDhCQUE4QixHQUE2QjtJQUMvRCxFQUFFLEVBQUUsd0JBQXdCLENBQUMseUJBQXlCO0lBQ3RELFVBQVUsRUFBRSxTQUFTO0lBQ3JCLFNBQVMsRUFBRSxHQUFHO0lBQ2QsUUFBUSxFQUFFLEVBQUU7SUFDWixTQUFTLEVBQUUsR0FBRztJQUNkLFNBQVMsRUFBRSxLQUFLO0NBQ2pCLENBQUE7QUFDRCxNQUFNLDhCQUE4QixHQUE2QjtJQUMvRCxFQUFFLEVBQUUsd0JBQXdCLENBQUMseUJBQXlCO0lBQ3RELFVBQVUsRUFBRSxTQUFTO0lBQ3JCLFNBQVMsRUFBRSxHQUFHO0lBQ2QsUUFBUSxFQUFFLEVBQUU7SUFDWixTQUFTLEVBQUUsR0FBRztJQUNkLFNBQVMsRUFBRSxLQUFLO0NBQ2pCLENBQUE7QUFDRCxNQUFNLHdDQUF3QyxHQUE2QjtJQUN6RSxFQUFFLEVBQUUsd0JBQXdCLENBQUMscUNBQXFDO0lBQ2xFLFVBQVUsRUFBRSxTQUFTO0lBQ3JCLFNB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